{"version":3,"sources":["screens/Register.js","screens/Login.js","App.js","serviceWorker.js","index.js"],"names":["Register","className","id","src","alt","type","placeholder","class","action","name","value","to","Login","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gSAiFeA,MA9Ef,WACE,OACE,yBAAKC,UAAU,aAGf,yBAAMA,UAAY,YAAYC,GAAG,QAEjC,yBAAKD,UAAU,cAEnB,yBAAKE,IAAI,iBAAiBC,IAAM,SAE5B,yBAAKH,UAAU,aAAaC,GAAG,UACnC,2BAAOG,KAAK,OAAQH,GAAG,cAAcD,UAAU,oBAAoBK,YAAY,cAC/E,uBAAGC,MAAM,qBAET,yBAAKN,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,OAAOH,GAAG,cAAcD,UAAU,oBAAqBK,YAAY,4BAC/E,uBAAGC,MAAM,kBAAT,aAIA,2BAAOL,GAAG,SAAV,iBAEA,2BAAOD,UAAU,eAAeI,KAAK,OAAQH,GAAG,uBAEhD,yBAAKD,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,OAAQH,GAAG,cAAcD,UAAU,oBAAoBK,YAAY,iBAC/E,uBAAGL,UAAU,qBAEb,yBAAKA,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,OAAOH,GAAG,cAAcD,UAAU,oBAAqBK,YAAY,yBAC/E,uBAAGL,UAAU,yBAEb,2BAAOC,GAAG,QAAV,0BACA,2BAAOD,UAAU,eAAeI,KAAK,OAAQH,GAAG,uBAEhD,yBAAKD,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,OAAQH,GAAG,cAAcD,UAAU,oBAAqBK,YAAY,6BAChF,uBAAGL,UAAU,wBAEb,uBAAGC,GAAI,MAAP,iFAGA,yBAAKD,UAAU,SAEf,0BAAMO,OAAO,KAEb,2BAAOH,KAAK,QAAQI,KAAK,SAASC,MAAM,SAFxC,UAGA,kBAAC,IAAD,CAAMC,GAAG,SAASV,UAAY,QAAO,2BAAOI,KAAK,QAAQI,KAAK,SAASC,MAAM,WAA7E,YAIA,yBAAKT,UAAU,aAAaC,GAAG,UAC/B,4BAAQG,KAAK,SAASJ,UAAU,OAAhC,cAGI,yBAAMA,UAAY,YAAYC,GAAG,SAEjC,yBAAKD,UAAU,aACf,wCACA,2BAAQC,GAAI,kBAAZ,yHAGA,yBAAKC,IAAI,kBAAkBC,IAAM,Y,MCOtBQ,MAvEf,WACE,OACE,yBAAKX,UAAU,aAGf,yBAAMA,UAAY,YAAYC,GAAG,UAGjC,yBAAOD,UAAU,aAGjB,yBAAKA,UAAU,cAEf,yBAAKE,IAAI,iBAAiBC,IAAM,SAEhC,yBAAKH,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,OAAQH,GAAG,cAAcD,UAAU,oBAAoBK,YAAY,iBAC/E,uBAAGL,UAAU,qBAEb,yBAAKA,UAAU,aAAaC,GAAG,UAC/B,2BAAOG,KAAK,WAAWH,GAAG,cAAcD,UAAU,oBAAqBK,YAAY,aACnF,uBAAGL,UAAU,yBAEb,yBAAKA,UAAU,aAAaC,GAAG,UAC/B,4BAAQG,KAAK,SAASJ,UAAU,OAAhC,YA0BA,yBAAMA,UAAY,YAAYC,GAAG,SAEjC,yBAAKD,UAAU,aACf,wCACA,2BAAQC,GAAI,kBAAZ,yHAGA,yBAAKC,IAAI,kBAAkBC,IAAM,Y,OCtCtBS,MAhBf,WACE,OACE,6BAEA,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAQC,OAAK,EAAEC,KAAM,IAAIC,UAAahB,IACtC,kBAAC,IAAD,CAAQe,KAAM,SAASC,UAAaJ,OCApBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.564a3a2e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Register.css';\r\nimport {Link} from 'react-router-dom'\r\nfunction Register() {\r\n  return (\r\n    <div className=\"container\">\r\n\r\n\r\n    <div  className = 'container' id='left'>\r\n    \r\n    <div className=\"form-group\" >\r\n\r\n<img src=\"/images/lo.png\" alt = \"alt\"/>\r\n</div>\r\n    <div className=\"form-group\" id=\"feilds\">\r\n<input type=\"text\"  id=\"input_width\" className=\"form-control item\" placeholder=\"Full Name\"/>\r\n<i class=\"fas fa-user-tie\"></i>\r\n</div>\r\n<div className=\"form-group\" id=\"feilds\">\r\n<input type=\"text\" id=\"input_width\" className=\"form-control item\"  placeholder=\"Company name (optional)\"/>\r\n<i class=\"material-icons\">business</i>\r\n\r\n</div>\r\n\r\n<label id='date1'>Date of Birth</label>\r\n\r\n<input className=\"form-control\" type=\"date\"  id=\"example-date-input\"/>\r\n\r\n<div className=\"form-group\" id=\"feilds\">\r\n<input type=\"text\"  id=\"input_width\" className=\"form-control item\" placeholder=\"Email Adress\"/>\r\n<i className=\"fas fa-envelope\"></i>\r\n</div>\r\n<div className=\"form-group\" id=\"feilds\">\r\n<input type=\"text\" id=\"input_width\" className=\"form-control item\"  placeholder=\"Notary Comission ID \"/>\r\n<i className=\"fas fa-address-card\"></i>\r\n</div>\r\n<label id='date'>Notary Expiration Date</label>\r\n<input className=\"form-control\" type=\"date\"  id=\"example-date-input\"/>\r\n\r\n<div className=\"form-group\" id=\"feilds\" >\r\n<input type=\"text\"  id=\"input_width\" className=\"form-control item\"  placeholder=\"Billing & Mailing Adress\"/>\r\n<i className=\"fas fa-credit-card\"></i>\r\n</div>\r\n<p id =\"pp\">\r\nAre you currently registered as an online notary with the Secratary of State?\r\n</p>\r\n<div className=\"radio\">\r\n  \r\n<form action=\"#\">\r\n\r\n<input type=\"radio\" name=\"gender\" value=\"male\"/>    Yes\r\n<Link to='/login' className = 'link'><input type=\"radio\" name=\"gender\" value=\"female\"/>    No</Link>\r\n  </form>\r\n  </div>\r\n\r\n<div className=\"form-group\" id=\"feilds\">\r\n<button type=\"button\" className=\"btn\">Register</button>\r\n</div>\r\n    </div>\r\n    <div  className = 'container' id='right'>\r\n\r\n    <div className=\"rightside\">\r\n    <h3>Register</h3>\r\n    <label  id =\"rightsidelable\">\r\n    Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or some different stuff.\r\n    </label>\r\n    <img src=\"/images/law.png\" alt = \"alt\"/>\r\n    </div>\r\n\r\n\r\n    \r\n    </div>\r\n\r\n\t\r\n\t\r\n  </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport './Login.css';\r\nfunction Login() {\r\n  return (\r\n    <div className=\"container\">\r\n\r\n\r\n    <div  className = 'container' id='right2'>\r\n\r\n    \r\n    <div   className='nechykaro'>\r\n\r\n\r\n    <div className=\"form-group\" >\r\n\r\n    <img src=\"/images/lo.png\" alt = \"alt\"/>\r\n    </div>\r\n    <div className=\"form-group\" id=\"feilds\">\r\n    <input type=\"text\"  id=\"input_width\" className=\"form-control item\" placeholder=\"Email Adress\"/>\r\n    <i className=\"fas fa-envelope\"></i>\r\n    </div>\r\n    <div className=\"form-group\" id=\"feilds\">\r\n    <input type=\"password\" id=\"input_width\" className=\"form-control item\"  placeholder=\"Passowrd\"/>\r\n    <i className=\"fas fa-address-card\"></i>\r\n    </div>\r\n    <div className=\"form-group\" id=\"feilds\">\r\n    <button type=\"button\" className=\"btn\">Login</button>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div  className = 'container' id='left1'>\r\n\r\n    <div className=\"rightside\">\r\n    <h3>Register</h3>\r\n    <label  id =\"rightsidelable\">\r\n    Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or some different stuff.\r\n    </label>\r\n    <img src=\"/images/law.png\" alt = \"alt\"/>\r\n    </div>\r\n\r\n\r\n    \r\n    </div>\r\n\r\n\t\r\n\t\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport Register from './screens/Register';      \nimport Login from './screens/Login';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nfunction App() {\n  return (\n    <div>\n    \n    <Router>\n    \n    <Route  exact  path ='/' component = {Register}  />\n    <Route  path ='/login' component = {Login}  />\n    \n    \n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}